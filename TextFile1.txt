=================================================================
Грамматика в EBNF для языка арифметических выражений
=================================================================

lang -> expr+
expr -> expr_assign | expr_while | expr_if
expr_assign -> VAR ASSIGN_OP value (OPERATOR value)*

expr_while -> WHILE_KW L_BRACE expr_value R_BRACE exec_block
exec_block ->  L_SQR_BR expr+ R_SQR_BR

expr_if -> IF_KW If_head If_body 
If_head -> L_BRACE expr_value R_BRACE
expr_value -> (value ) (CONDITIONAL_OP value)*

If_body -> exec_block

value -> VAR | DIGIT

assing_list -> LIST VAR
add_to_list -> VAR DOT ADD_TO_LIST_KW L_BRACKET value R_BRACKET
get_element_from_list -> VAR L_SQR_BRACKET value R_SQR_BRACKET



        VAR -> "^[A-Za-z]+$"
        DIGIT -> ^0|[1-9][0-9]*$
        OPERATOR -> ^[-|+|/|\*]$
        ASSIGNMENT_OPERATOR -> ^=$
        L_BRACE -> (
        R_BRACE -> )
        L_SQR_BR -> {
        R_SQR_BR -> }
        CONDITIONAL_OP -> > | <
        IF_KW -> (?i)(\W|^)(if)(\W|$)
        WHILE_KW -> (?i)(\W|^)(while)(\W|$)
